@model projdotnet.Models.client

@{
    ViewBag.Title = "Edit";
    string user = Request.QueryString["user"];
    string password = Request.QueryString["password"];
}

<h2>Edit user</h2>
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "client",
        Value = "client"
    });
    listItems.Add(new SelectListItem
    {
        Text = "admin",
        Value = "admin",

    });
}
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4></h4>
            <hr />

            <p class="text-bg-success text-white p-3">you can edit your account account right here</p>
            <div class="form-group ">
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="row">
                    <div class="col-3">
                        @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownListFor(model => model.role, listItems, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(model => model.money, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.money, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.money, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(model => model.user, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.user, new { htmlAttributes = new { @class = "form-control" ,@Value = user } })
                        @Html.ValidationMessageFor(model => model.user, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @Value = password } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 d-flex p-2  mt-4">
                    <input type="submit" value="Save" class="btn btn-secondary " />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light mx-1" })
                </div>
            </div>
        </div>
    }




