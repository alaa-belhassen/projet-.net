@model projdotnet.Models.client

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h2>@ViewBag.Title</h2>
    <h4>client</h4>
    <hr />
    <p class="text-bg-success text-white p-3">welcome user here you can create a new account  </p>
    <div class="form-group container">
        <div class="row">

            <div class="col ">
                @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>

            <div class="col ">
                @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
            </div>

            <div class="col ">
                @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
            </div>

            <div class="col">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
            <div class="col-3 mx-3">
                @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control disabled", @Value = "client" } })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <p class="text-bg-success text-white p-3 mt-2"> here you can create your login indetifiers  </p>
    <div class="d-flex">
        <div class="col-3 ">
            @Html.LabelFor(model => model.user, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.user, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.user, "", new { @class = "text-danger" })
        </div>

        <div class="col-3 mx-3">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mt-5">
        <div class="col-md-offset-2 col-md-10 d-flex p-2 ">
            <input type="submit" value="Save" class="btn btn-secondary " />
            @Html.ActionLink("Back to List", "login", null, new { @class = "btn btn-light mx-1" })
        </div>
    </div>
</div>
}




